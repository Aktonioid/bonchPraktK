@page "/GeoObjectGetAll"

@using System.Net.Http
@using System.Net.Http.Json
@using System.Threading.Tasks


@*@using static System.Net.WebRequestMethods;*@
<PageTitle>Get</PageTitle>

<div class="row">
    <div class="col text-center">
        <h1>GeoNames</h1>
    </div>
</div>

<button class="bth" type="button">Update</button>
@*
<div class="table-responsive">
    <table class="table table-striped">
        <thead class="thead-light">
            <tr>
                <th></th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>

        </tbody>
    </table>
</div>*@

@if (geoObjectTypeDtos != null)
{
    <br >
    <table>
        <thead>
            <tr>
                <th>Код раздела</th>
                <th>Код объекта</th>
                <th>Name</th>
                <th>Название</th>
                <th>Type</th>
                <th>Тип</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var GeoObjectType in geoObjectTypeDtos)
            {
                <tr>
                    <td>@GeoObjectType.TypeSectionCode</td>
                    <td>@GeoObjectType.Code</td>
                    <td>@GeoObjectType.NameInEnglish</td>
                    <td>@GeoObjectType.NameInRussian</td>
                    <td>@GeoObjectType.DescriptionInEnglish</td>
                    <td>@GeoObjectType.DescriptionInRussian</td>
                </tr>
            }
    </tbody>
    </table>
}



@code
{
    string _value="A";
    private List<GeoObjectType> geoObjectTypeDtos = null!;

    //protected async override Task OnInitializedAsync()
    //{
    //    geoObjectTypeDtos = new List<GeoObjectType>()
    //    {
    //        new GeoObjectType()
    //            {
    //                Code = "ADM1",
    //                NameInEnglish = "first-order administrative division",
    //                NameInRussian = "административное деление первого порядка",
    //                DescriptionInEnglish = "a primary administrative division of a country, such as a state in the United States",
    //                DescriptionInRussian = "основное административное деление страны, например, штата в Соединенных Штатах",
    //                TypeSectionCode = "A"
    //            },
    //        new GeoObjectType()
    //            {
    //                Code = "AGRC",
    //                NameInEnglish = "agricultural colony",
    //                NameInRussian = "сельскохозяйственная колония",
    //                DescriptionInEnglish = "a tract of land set aside for agricultural settlement",
    //                DescriptionInRussian = "сельскохозяйственное поселение",
    //                TypeSectionCode = "L"
    //            },
    //        new GeoObjectType()
    //            {
    //                Code = "errg",
    //                NameInEnglish = "errg",
    //                NameInRussian = "errg",
    //                DescriptionInEnglish = "errg",
    //                DescriptionInRussian = "errg",
    //                TypeSectionCode = "A"
    //            },
    //        new GeoObjectType()
    //            {
    //                Code = "geradg",
    //                NameInEnglish = "dghjj",
    //                NameInRussian = "sgfjn",
    //                DescriptionInEnglish = "iukhjf",
    //                DescriptionInRussian = "errg",
    //                TypeSectionCode = "A"
    //            }

    //    };
    //}

    //public async Task<IEnumerable<GeoObjectType>>
    //public async Task<List<GeoObjectType>> sotrList(List<GeoObjectType> geoObjectTypes)
    //{

    //    return null;
    //}
    //[Parameter]
    public string MessageAdd { get; set; } = String.Empty;
    HttpClient Http = new();
    //private IEnumerable<GeoObjectTypeDto> geoObjectTypeDtos = null!;
    private bool fulfil = false;
    protected override async Task OnParametersSetAsync()
    {
        Console.WriteLine(_value);
        geoObjectTypeDtos =  new List<GeoObjectType> (await Http.GetFromJsonAsync<IEnumerable<GeoObjectType>>
            ($"https://localhost:8001/api/GeoObjectType"));

        //foreach (var i in geoObjectTypeDtos)
        //{
        //    Console.WriteLine(i.TypeSectionCode);
        //}
        fulfil = true;
    }

    protected override async Task OnInitializedAsync()
    {

        geoObjectTypeDtos = new List<GeoObjectType>(await Http.GetFromJsonAsync<IEnumerable<GeoObjectType>>
            ($"https://localhost:8001/api/GeoObjectType"));
        //Console.WriteLine("hui");
        
        fulfil = true;
    }
    public async Task Sleep()
    {
        Thread.Sleep(200);
    }
}





