@page "/GeoObjectGetAll"

@using System.Net.Http
@using System.Net.Http.Json
@using System.Threading.Tasks

<PageTitle>Все объекты</PageTitle>

<div class="row">
    <div class="col text-center">
        <h1>Все объекты</h1>
    </div>
</div>

<button class="btn" type="button">Update</button>


@if (geoObjectTypeDtos != null)
{
    <br >
    <table>
        <thead>
            <tr>
                <th>Код раздела</th>
                <th>Код объекта</th>
                <th>Name</th>
                <th>Название</th>
                <th>Description</th>
                <th>Описание</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var GeoObjectType in geoObjectTypeDtos)
            {
                <tr>
                    <td>@GeoObjectType.TypeSectionCode</td>
                    <td>@GeoObjectType.Code</td>
                    <td>@GeoObjectType.NameInEnglish</td>
                    <td>@GeoObjectType.NameInRussian</td>
                    <td>@GeoObjectType.DescriptionInEnglish</td>
                    <td>@GeoObjectType.DescriptionInRussian</td>
                </tr>
            }
    </tbody>
    </table>
}

@code
{
    string _value="A";
    private List<GeoObjectType> geoObjectTypeDtos = null!;
    public string MessageAdd { get; set; } = String.Empty;
    HttpClient Http = new();
    private bool fulfil = false;
    protected override async Task OnParametersSetAsync()
    {
        Console.WriteLine(_value);
        geoObjectTypeDtos =  new List<GeoObjectType> (await Http.GetFromJsonAsync<IEnumerable<GeoObjectType>>
            ($"https://localhost:8001/api/GeoObjectType"));
        fulfil = true;
    }
    protected override async Task OnInitializedAsync()
    {
        geoObjectTypeDtos = new List<GeoObjectType>(await Http.GetFromJsonAsync<IEnumerable<GeoObjectType>>
            ($"https://localhost:8001/api/GeoObjectType"));
        fulfil = true;
    }  
}





